c
n
quit
Workspace.all.map { |w| w.id }
Workspace.all
User.all.map { |u| u.id }
User.all
w1.users.push(u1)
u1.workspaces.push(w1)
w1.users
u1.workspaces
w1.users
u1.workspaces.push(w1)
u1.workspaces
u1.workspace
w1.users << u1
w1.users.push(u)
w1
w1.users
w1
u
s
u0
u1
c
@tasks
c
n
@tasks
n
params
c
params[:id]
c
params[:id]
c
params[:id]
quit
c
params[:id]
c
params[:id]
c
n
params[:id]
@task
c
params[:task_id]
@comment
n
comment_params
@comment
c
display @tasks
n
@tasks.where(workspace_id: params[:workspace_id])
@tasks
n
params
c
n
c
n
c
n
params[:username]
@user
n
c
@workspace
n
c
n
@workspace
n
@user
n
c
Workspace.find_by(params[:workspace_id])
params[:workspace_id]
Workspace.find_by(params[:workspace_id])
User.find_by_id(params[:user_id])
params
c
n
@user
n
c
/Users/Caleb/Desktop/Shmasana/Shmasana c
c
User.find_by(username: params[:username])
params[:username]
params
quit
'123'.gsub(/[0-9]/, '')
n
c
User.find_by(username: 'u')
User.find_by(username: 'i
params[:id]
c
User.find_by(username: params[:id])
params[:id]
c
User.find_by(email: 'email@eamail.coms')
User.find_by(email: 'email@eamil.coms')
User.find_by(email: 'email@eamil.coms'
params[:id].is_a?(String)
params[:id]
params
c
'email@.com'.split('').include?('@')
"1".is_a?(String)
"1".split
c
params[:id]
1.to_i
params[:id]
params
@user
c
params[:id]
@user
c
task_params
c
task_params
@task
n
@task
c
@tasks.map { |m| m.project_id }
@tasks
n
c
n
params
c
params
c
params[:project_id]
Task.last
@tasks
n
params[:project_id]
Task.all.each { |t| t.project_id }
Task.all
params
c
@task.asssignee_id
@task
c
@task.workc
@task
c
@task
c
@task
c
@task
c
n
c
User.find_by_id(params[:id])
params
c
@tasks.sort_by { |t| t.id}.map { |t| t.id }
@tasks.sort
@tasks
quit
c
task_params
task-params
@task
n
c
task_params
n
c
n
task_params
@task
n
@task
c
cc
params
c
params.id
params
c
params
c
@workspace
c
params
c
workspace_params
@workspace
c
Workspace.includes(:users).where(users: {id: 1}).length
Workspace.includes(:users).where(users: {id: 1})
Workspace.includes(:users).where(users: {u})
u
Workspace.includes(:users).where(users: {u}).length
Workspace.includes(:users).where(users: {id: 2}).length
Workspace.includes(:users).where(users: {id: 1}).length
Workspace.includes(:users).where(users: {id: 1}).lenght
Workspace.includes(:users).where(users: {id: 1})
Workspace.includes(:users).where(users: {user_id: 1})
Workspace.includes(:users).where(users: {user_id: 1}).length
Workspace.includes(:users).where(users: {user_id: 1})
Workspace.includes(:users)
Workspacewhere(users: 1)
Workspace.where(user_id: user)
Workspace.last.users.length
Workspace.first.users.length
Workspace.first.users
Workspace.select { |w| w.users(u) }.map { |w| w.id }.length
u = User.last
Workspace.select { |w| w.users(u) }.map { |w| w.id }.length
Workspace.select { |w| w.users(u) }.map { |w| w.id }
Workspace.select { |w| w.users(u) }
Workspace.all.select { |w| w.users(u) }
Workspace.all.select
Workspace.all
Workspace.where('? IN users', u)
Workspace.where('? in users', u)
u = User.find_by_id(1)
Workspace.where('? in users', user)
user
n
Workspace.where('? in users', user)
Workspace.where('1 in users')
Workspace.where(1 in :users)
Workspace.where(1 in users)
Workspace.where(users: 1)
Workspace.where(users: )
Workspace.where(users.include?(user))
params
c
user.workspaces
@workspace.users
n
c
n
user
n
c
juw.workspace_id = @workspace.id
juw
juw.user_id = user.id
juw
juw = JoinUserWorkspace.new
JoinUserWorkspace
user.workspaces.push(@workspace)
